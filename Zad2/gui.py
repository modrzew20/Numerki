# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import pandas as pd

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog

from main import *


class Ui_MainWindow(object):
    file = 0
    matrixA = 0

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1121, 594)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 10, 121, 51))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.openfile)

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(110, 380, 500, 71))
        self.label_2.setObjectName("label_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(260, 490, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.countbyiteration)

        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(400, 490, 93, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.countbyprecision)

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(250, 30, 220, 30))
        self.label.setObjectName("label")
        self.lineEditdigit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEditdigit.setGeometry(QtCore.QRect(110, 490, 113, 22))
        self.lineEditdigit.setObjectName("lineEditdigit")

        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(120, 110, 400, 300))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Load from file "))
        self.label_2.setText(_translate("MainWindow", "result"))
        self.pushButton_3.setText(_translate("MainWindow", "xn-xn-1<E"))
        self.pushButton_2.setText(_translate("MainWindow", "iteration"))
        self.label.setText(_translate("MainWindow", "correct"))

    def creategrid(self):
        k = 0
        for i in range(len(file)):
            for j in range((len(file[0]) * 2) - 1):
                if j == (len(file[0]) * 2) - 2:
                    label = QtWidgets.QLabel(self.gridLayoutWidget)
                    label.setText("=" + str(file[i][k]))
                    self.gridLayout.addWidget(label, i, j, 1, 1)
                elif j % 2 == 0:
                    label = QtWidgets.QLabel(self.gridLayoutWidget)
                    text = ""
                    if file[i][k] >= 0:
                        text = "+"
                    label.setText(text + str(file[i][k]))
                    self.gridLayout.addWidget(label, i, j, 1, 1)
                    k += 1
                else:
                    label = QtWidgets.QLabel(self.gridLayoutWidget)
                    label.setText(" x" + str(k))
                    self.gridLayout.addWidget(label, i, j, 1, 1)
            k = 0

    def openfile(self):
        filename = QFileDialog.getOpenFileName()
        filee = pd.read_csv(filename[0], header=None)
        global file
        file = filee.values.tolist()
        for row in range(len(file)):
            for column in range(len(file[0])):
                file[row][column] = double(file[row][column])
        global matrixA
        matrixA = checkMatrix(file)
        if matrixA == False:
            self.label.setText("Matrix has zeros on its main diagonal \n or not enough number of equations ")
        else:
            self.label.setText("Matrix is correct")
            self.creategrid()

    def countbyiteration(self):
        result, iteration = count(int(self.lineEditdigit.text()), True, file, matrixA)
        self.setresult(result, iteration)

    def countbyprecision(self):
        count(float(self.lineEditdigit.text()), False, file, matrixA)

    def setresult(self, result, iteration):
        print(result, iteration)

        text = ""
        for i in range(len(result)):
            text += "x" + str(i + 1) + " = " + str(result[i]) + " "
            if i % 2 != 0:
                text += "\n"
        self.label_2.setText(text)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
